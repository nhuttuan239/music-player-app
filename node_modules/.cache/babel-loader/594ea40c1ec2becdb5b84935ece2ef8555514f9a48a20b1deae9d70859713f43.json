{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useContext } from \"react\";\nimport { MusicPlayerContext } from \"../contexts/MusicPlayerContext\";\nconst useMusicPlayer = () => {\n  _s();\n  const {\n    state,\n    setState\n  } = useContext(MusicPlayerContext);\n\n  // Play a specific track\n  function playTrack(index) {\n    if (index === state.currentTrackIndex) {\n      togglePlay();\n    } else {\n      state.audioPlayer.pause();\n      const audio = new Audio(state.tracks[index].file);\n      audio.loop = true;\n      state.audioPlayer = audio;\n      state.audioPlayer.play();\n      setState(state => ({\n        ...state,\n        currentTrackIndex: index,\n        isPlaying: true\n      }));\n    }\n  }\n\n  // Toggle play or pause\n  function togglePlay() {\n    if (state.isPlaying) {\n      state.audioPlayer.pause();\n    } else {\n      state.audioPlayer.play();\n    }\n    setState(state => ({\n      ...state,\n      isPlaying: !state.isPlaying\n    }));\n  }\n\n  // Play the previous track in the tracks array\n  function playPreviousTrack() {\n    const newIndex = ((state.currentTrackIndex + -1) % state.tracks.length + state.tracks.length) % state.tracks.length;\n    playTrack(newIndex);\n  }\n\n  // Play the next track in the tracks array\n  function playNextTrack() {\n    const newIndex = (state.currentTrackIndex + 1) % state.tracks.length;\n    playTrack(newIndex);\n  }\n  return {\n    playTrack,\n    togglePlay,\n    currentTrackName: state.currentTrackIndex !== null && state.tracks[state.currentTrackIndex].name,\n    trackList: state.tracks,\n    isPlaying: state.isPlaying,\n    currentTrackIndex: state.currentTrackIndex,\n    playPreviousTrack,\n    playNextTrack\n  };\n};\n_s(useMusicPlayer, \"HQOEX8LuP3Imca7Htmd/Ve9zFgo=\");\nexport default useMusicPlayer;","map":{"version":3,"names":["useContext","MusicPlayerContext","useMusicPlayer","_s","state","setState","playTrack","index","currentTrackIndex","togglePlay","audioPlayer","pause","audio","Audio","tracks","file","loop","play","isPlaying","playPreviousTrack","newIndex","length","playNextTrack","currentTrackName","name","trackList"],"sources":["/Users/macbookpro/Documents/Cder/reactJS/M2.2/Music-Player/src/hooks/usePlayerProvider.js"],"sourcesContent":["import { useContext } from \"react\";\nimport { MusicPlayerContext } from \"../contexts/MusicPlayerContext\";\n\nconst useMusicPlayer = () => {\n  const { state, setState } = useContext(MusicPlayerContext);\n\n  // Play a specific track\n  function playTrack(index) {\n    if (index === state.currentTrackIndex) {\n      togglePlay();\n    } else {\n      state.audioPlayer.pause();\n\n      const audio = new Audio(state.tracks[index].file);\n      audio.loop = true;\n      state.audioPlayer = audio;\n      state.audioPlayer.play();\n\n      setState((state) => ({\n        ...state,\n        currentTrackIndex: index,\n        isPlaying: true,\n      }));\n    }\n  }\n\n  // Toggle play or pause\n  function togglePlay() {\n    if (state.isPlaying) {\n      state.audioPlayer.pause();\n    } else {\n      state.audioPlayer.play();\n    }\n    setState((state) => ({ ...state, isPlaying: !state.isPlaying }));\n  }\n\n  // Play the previous track in the tracks array\n  function playPreviousTrack() {\n    const newIndex =\n      (((state.currentTrackIndex + -1) % state.tracks.length) +\n        state.tracks.length) %\n      state.tracks.length;\n    playTrack(newIndex);\n  }\n\n  // Play the next track in the tracks array\n  function playNextTrack() {\n    const newIndex = (state.currentTrackIndex + 1) % state.tracks.length;\n    playTrack(newIndex);\n  }\n\n  return {\n    playTrack,\n    togglePlay,\n    currentTrackName:\n      state.currentTrackIndex !== null &&\n      state.tracks[state.currentTrackIndex].name,\n    trackList: state.tracks,\n    isPlaying: state.isPlaying,\n    currentTrackIndex: state.currentTrackIndex,\n    playPreviousTrack,\n    playNextTrack,\n  };\n};\n\nexport default useMusicPlayer;\n"],"mappings":";AAAA,SAASA,UAAU,QAAQ,OAAO;AAClC,SAASC,kBAAkB,QAAQ,gCAAgC;AAEnE,MAAMC,cAAc,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC3B,MAAM;IAAEC,KAAK;IAAEC;EAAS,CAAC,GAAGL,UAAU,CAACC,kBAAkB,CAAC;;EAE1D;EACA,SAASK,SAASA,CAACC,KAAK,EAAE;IACxB,IAAIA,KAAK,KAAKH,KAAK,CAACI,iBAAiB,EAAE;MACrCC,UAAU,CAAC,CAAC;IACd,CAAC,MAAM;MACLL,KAAK,CAACM,WAAW,CAACC,KAAK,CAAC,CAAC;MAEzB,MAAMC,KAAK,GAAG,IAAIC,KAAK,CAACT,KAAK,CAACU,MAAM,CAACP,KAAK,CAAC,CAACQ,IAAI,CAAC;MACjDH,KAAK,CAACI,IAAI,GAAG,IAAI;MACjBZ,KAAK,CAACM,WAAW,GAAGE,KAAK;MACzBR,KAAK,CAACM,WAAW,CAACO,IAAI,CAAC,CAAC;MAExBZ,QAAQ,CAAED,KAAK,KAAM;QACnB,GAAGA,KAAK;QACRI,iBAAiB,EAAED,KAAK;QACxBW,SAAS,EAAE;MACb,CAAC,CAAC,CAAC;IACL;EACF;;EAEA;EACA,SAAST,UAAUA,CAAA,EAAG;IACpB,IAAIL,KAAK,CAACc,SAAS,EAAE;MACnBd,KAAK,CAACM,WAAW,CAACC,KAAK,CAAC,CAAC;IAC3B,CAAC,MAAM;MACLP,KAAK,CAACM,WAAW,CAACO,IAAI,CAAC,CAAC;IAC1B;IACAZ,QAAQ,CAAED,KAAK,KAAM;MAAE,GAAGA,KAAK;MAAEc,SAAS,EAAE,CAACd,KAAK,CAACc;IAAU,CAAC,CAAC,CAAC;EAClE;;EAEA;EACA,SAASC,iBAAiBA,CAAA,EAAG;IAC3B,MAAMC,QAAQ,GACZ,CAAE,CAAChB,KAAK,CAACI,iBAAiB,GAAG,CAAC,CAAC,IAAIJ,KAAK,CAACU,MAAM,CAACO,MAAM,GACpDjB,KAAK,CAACU,MAAM,CAACO,MAAM,IACrBjB,KAAK,CAACU,MAAM,CAACO,MAAM;IACrBf,SAAS,CAACc,QAAQ,CAAC;EACrB;;EAEA;EACA,SAASE,aAAaA,CAAA,EAAG;IACvB,MAAMF,QAAQ,GAAG,CAAChB,KAAK,CAACI,iBAAiB,GAAG,CAAC,IAAIJ,KAAK,CAACU,MAAM,CAACO,MAAM;IACpEf,SAAS,CAACc,QAAQ,CAAC;EACrB;EAEA,OAAO;IACLd,SAAS;IACTG,UAAU;IACVc,gBAAgB,EACdnB,KAAK,CAACI,iBAAiB,KAAK,IAAI,IAChCJ,KAAK,CAACU,MAAM,CAACV,KAAK,CAACI,iBAAiB,CAAC,CAACgB,IAAI;IAC5CC,SAAS,EAAErB,KAAK,CAACU,MAAM;IACvBI,SAAS,EAAEd,KAAK,CAACc,SAAS;IAC1BV,iBAAiB,EAAEJ,KAAK,CAACI,iBAAiB;IAC1CW,iBAAiB;IACjBG;EACF,CAAC;AACH,CAAC;AAACnB,EAAA,CA5DID,cAAc;AA8DpB,eAAeA,cAAc","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}