{"ast":null,"code":"var _jsxFileName = \"/Users/macbookpro/Documents/Cder/reactJS/find-jobs-app/src/pages/HomePage.js\",\n  _s = $RefreshSig$();\nimport { Container } from \"@mui/material\";\nimport React from \"react\";\nimport Grid from \"@mui/material/Grid\";\nimport JobCard from \"../components/JobCard\";\nimport jobs from \"../jobs.json\";\nimport Pagination from \"../components/Pagination\";\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction HomePage() {\n  _s();\n  const [currentPage, setCurrentPage] = useState(1);\n  const postsPerPage = 6;\n  const lastPostIndex = currentPage * postsPerPage;\n  const firstPostIndex = lastPostIndex - postsPerPage;\n  const currentPosts = jobs.slice(firstPostIndex, lastPostIndex);\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      spacing: 2,\n      mt: 1,\n      children: currentPosts.map(job => /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 6,\n        md: 4,\n        lg: 3,\n        children: /*#__PURE__*/_jsxDEV(JobCard, {\n          job: job\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 13\n        }, this)\n      }, job.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Pagination, {\n      totalPosts: jobs.length,\n      postsPerPage: postsPerPage,\n      setCurrentPage: setCurrentPage,\n      currentPage: currentPage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 5\n  }, this);\n}\n_s(HomePage, \"6xAUoJ2motYJ38x4zeUWisA+X/4=\");\n_c = HomePage;\nexport default HomePage;\nvar _c;\n$RefreshReg$(_c, \"HomePage\");","map":{"version":3,"names":["Container","React","Grid","JobCard","jobs","Pagination","useState","jsxDEV","_jsxDEV","HomePage","_s","currentPage","setCurrentPage","postsPerPage","lastPostIndex","firstPostIndex","currentPosts","slice","children","container","spacing","mt","map","job","item","xs","md","lg","fileName","_jsxFileName","lineNumber","columnNumber","id","totalPosts","length","_c","$RefreshReg$"],"sources":["/Users/macbookpro/Documents/Cder/reactJS/find-jobs-app/src/pages/HomePage.js"],"sourcesContent":["import { Container } from \"@mui/material\";\nimport React from \"react\";\nimport Grid from \"@mui/material/Grid\";\nimport JobCard from \"../components/JobCard\";\nimport jobs from \"../jobs.json\";\nimport Pagination from \"../components/Pagination\";\nimport { useState } from \"react\";\n\nfunction HomePage() {\n  const [currentPage, setCurrentPage] = useState(1);\n  const postsPerPage = 6;\n  const lastPostIndex = currentPage * postsPerPage;\n  const firstPostIndex = lastPostIndex - postsPerPage;\n  const currentPosts = jobs.slice(firstPostIndex, lastPostIndex);\n\n  return (\n    <Container>\n      <Grid container spacing={2} mt={1}>\n        {currentPosts.map((job) => (\n          <Grid key={job.id} item xs={6} md={4} lg={3}>\n            <JobCard job={job} />\n          </Grid>\n        ))}\n      </Grid>\n      <Pagination\n        totalPosts={jobs.length}\n        postsPerPage={postsPerPage}\n        setCurrentPage={setCurrentPage}\n        currentPage={currentPage}\n      />\n    </Container>\n  );\n}\n\nexport default HomePage;\n"],"mappings":";;AAAA,SAASA,SAAS,QAAQ,eAAe;AACzC,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,IAAI,MAAM,oBAAoB;AACrC,OAAOC,OAAO,MAAM,uBAAuB;AAC3C,OAAOC,IAAI,MAAM,cAAc;AAC/B,OAAOC,UAAU,MAAM,0BAA0B;AACjD,SAASC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEjC,SAASC,QAAQA,CAAA,EAAG;EAAAC,EAAA;EAClB,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGN,QAAQ,CAAC,CAAC,CAAC;EACjD,MAAMO,YAAY,GAAG,CAAC;EACtB,MAAMC,aAAa,GAAGH,WAAW,GAAGE,YAAY;EAChD,MAAME,cAAc,GAAGD,aAAa,GAAGD,YAAY;EACnD,MAAMG,YAAY,GAAGZ,IAAI,CAACa,KAAK,CAACF,cAAc,EAAED,aAAa,CAAC;EAE9D,oBACEN,OAAA,CAACR,SAAS;IAAAkB,QAAA,gBACRV,OAAA,CAACN,IAAI;MAACiB,SAAS;MAACC,OAAO,EAAE,CAAE;MAACC,EAAE,EAAE,CAAE;MAAAH,QAAA,EAC/BF,YAAY,CAACM,GAAG,CAAEC,GAAG,iBACpBf,OAAA,CAACN,IAAI;QAAcsB,IAAI;QAACC,EAAE,EAAE,CAAE;QAACC,EAAE,EAAE,CAAE;QAACC,EAAE,EAAE,CAAE;QAAAT,QAAA,eAC1CV,OAAA,CAACL,OAAO;UAACoB,GAAG,EAAEA;QAAI;UAAAK,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAC,GADZR,GAAG,CAACS,EAAE;QAAAJ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAEX,CACP;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE,CAAC,eACPvB,OAAA,CAACH,UAAU;MACT4B,UAAU,EAAE7B,IAAI,CAAC8B,MAAO;MACxBrB,YAAY,EAAEA,YAAa;MAC3BD,cAAc,EAAEA,cAAe;MAC/BD,WAAW,EAAEA;IAAY;MAAAiB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC1B,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACO,CAAC;AAEhB;AAACrB,EAAA,CAxBQD,QAAQ;AAAA0B,EAAA,GAAR1B,QAAQ;AA0BjB,eAAeA,QAAQ;AAAC,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}